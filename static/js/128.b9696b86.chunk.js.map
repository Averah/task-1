{"version":3,"file":"static/js/128.b9696b86.chunk.js","mappings":"2KAmBA,YAhBA,MAGIA,WAAAA,GAAe,KAFfC,MAAO,IAAIC,MAAOC,eAGdC,EAAAA,EAAAA,IAAmBC,KACvB,CAEAC,WAAAA,GACID,KAAKJ,KAAOI,KAAKJ,KAAO,CAC5B,CACAM,WAAAA,GACIF,KAAKJ,KAAOI,KAAKJ,KAAO,CAC5B,G,aCdJ,QAA+B,mCAA/B,EAA8E,gCAA9E,EAAyH,+BAAzH,EAAgK,4BAAhK,EAAyM,iCAAzM,EAAqP,+BAArP,EAA0R,0B,aCK1R,MAAMO,EAAiBA,CAACC,EAAeR,IAC5B,IAAIC,KAAKD,EAAMQ,EAAQ,EAAG,GAAGC,UA2CxC,GAxC+BC,EAAAA,EAAAA,KAAS,KACpC,MAAMV,EAAOW,EAAcX,MACpBY,EAAUC,IAAeC,EAAAA,EAAAA,UAAwB,IAElDR,GAAcS,EAAAA,EAAAA,cAAY,IAAMJ,EAAcL,eAAe,IAC7DD,GAAcU,EAAAA,EAAAA,cAAY,IAAMJ,EAAcN,eAAe,IAsBnE,OApBAW,EAAAA,EAAAA,YAAU,KAEN,MAAMC,EAAc,GACpB,IAAK,IAAIT,EAAQ,EAAGA,EAAQ,GAAIA,IAAS,CACrC,MAAMU,EAAcX,EAAeC,EAAOR,GACpCmB,EAAO,GACb,IAAK,IAAIC,EAAM,EAAGA,GAAOF,EAAaE,IAClCD,EAAKE,MAAKC,EAAAA,EAAAA,KAAA,MAAcC,UAAWC,EAAWC,SAAEL,GAA7BA,IAEvBH,EAAYI,MACRK,EAAAA,EAAAA,MAAA,OAAiBH,UAAWC,EAAaC,SAAA,EACrCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,SAAE,IAAIxB,KAAKD,EAAMQ,GAAOmB,eAAe,UAAW,CAAEnB,MAAO,YAC7Fc,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAAEN,MAF3BX,GAKlB,CAEAK,EAAYI,EAAY,GACzB,CAACjB,KAGA0B,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAoBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAiBC,SAAA,EAC7BH,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAASvB,EAAYmB,SAAC,oFAAuB,4FACnCH,EAAAA,EAAAA,KAAA,KAAAG,SAAIzB,KACtBsB,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACC,QAASxB,EAAYoB,SAAC,kFAGlCH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAgBC,SAAEb,MAChC,IC7Bd,GAZmCkB,EAAAA,EAAAA,OAAK,KAGhCJ,EAAAA,EAAAA,MAACK,EAAAA,EAAU,CAAAN,SAAA,EACPH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,mBACHH,EAAAA,EAAAA,KAACU,EAAY,Q,+DCTzB,QAAyB,uB,aCKzB,MAQA,GARsCF,EAAAA,EAAAA,OAAKG,IAA6C,IAA5C,SAAER,EAAQ,UAAEF,KAAcW,GAAYD,EAC9E,OACIX,EAAAA,EAAAA,KAAA,UAAQC,UAAWY,IAAGX,EAAeD,MAAgBW,EAAUT,SAC1DA,GACI,G","sources":["store/calendarStore.ts","webpack://first-task/./src/components/YearCalendar/YearCalendar.module.css?6bef","components/YearCalendar/YearCalendar.tsx","pages/YearCalendarPage/YearCalendarPage.tsx","webpack://first-task/./src/ui/Button/Button.module.css?be3d","ui/Button/Button.tsx"],"sourcesContent":["import { makeAutoObservable } from \"mobx\";\r\n\r\n\r\nclass CalendarStore {\r\n    year = new Date().getFullYear();\r\n\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setNextYear() {\r\n        this.year = this.year + 1\r\n    } \r\n    setPrevYear() {\r\n        this.year = this.year - 1\r\n    }\r\n\r\n}\r\n\r\nexport default new CalendarStore();","// extracted by mini-css-extract-plugin\nexport default {\"YearCalendar\":\"YearCalendar_YearCalendar__Fx1mt\",\"yearTitle\":\"YearCalendar_yearTitle__xX9T-\",\"calendar\":\"YearCalendar_calendar__Ep-sf\",\"month\":\"YearCalendar_month__EqWt5\",\"monthTitle\":\"YearCalendar_monthTitle__uUW19\",\"daysList\":\"YearCalendar_daysList__OwJ92\",\"day\":\"YearCalendar_day__TkCyP\"};","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport calendarStore from '../../store/calendarStore';\r\nimport Button from '../../ui/Button/Button';\r\nimport styles from './YearCalendar.module.css';\r\n\r\nconst getDaysInMonth = (month: number, year: number) => {\r\n    return new Date(year, month + 1, 0).getDate();\r\n};\r\n\r\nconst YearCalendar: React.FC = observer(() => {\r\n    const year = calendarStore.year;\r\n    const [calendar, setCalendar] = useState<JSX.Element[]>([]);\r\n\r\n    const setPrevYear = useCallback(() => calendarStore.setPrevYear(), []);\r\n    const setNextYear = useCallback(() => calendarStore.setNextYear(), []);\r\n\r\n    useEffect(() => {\r\n\r\n        const newCalendar = [];\r\n        for (let month = 0; month < 12; month++) {\r\n            const daysInMonth = getDaysInMonth(month, year);\r\n            const days = [];\r\n            for (let day = 1; day <= daysInMonth; day++) {\r\n                days.push(<li key={day} className={styles.day}>{day}</li>);\r\n            }\r\n            newCalendar.push(\r\n                <div key={month} className={styles.month}>\r\n                    <div className={styles.monthTitle}>{new Date(year, month).toLocaleString('default', { month: 'long' })}</div>\r\n                    <ul className={styles.daysList}>{days}</ul>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        setCalendar(newCalendar);\r\n    }, [year]);\r\n\r\n    return (\r\n        <div className={styles.YearCalendar}>\r\n            <div className={styles.yearTitle}>\r\n                <Button onClick={setPrevYear}>Предыдущий год</Button>\r\n                Календарь на год: <b>{year}</b>\r\n                <Button onClick={setNextYear}>Следующий год</Button>\r\n            </div>\r\n\r\n            <div className={styles.calendar}>{calendar}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default YearCalendar;","import React from \"react\";\r\nimport { memo } from 'react';\r\nimport { PageLayout } from \"../../components/PageLayout/PageLayout\";\r\nimport YearCalendar from \"../../components/YearCalendar/YearCalendar\";\r\n\r\nconst YearCalendarPage: React.FC = memo(() => {\r\n\r\n    return (\r\n        <PageLayout>\r\n            <b>Calendar Page</b>\r\n            <YearCalendar />\r\n        </PageLayout>\r\n\r\n\r\n    )\r\n});\r\n\r\nexport default YearCalendarPage;","// extracted by mini-css-extract-plugin\nexport default {\"Button\":\"Button_Button__c5zJp\"};","import React, { memo } from 'react';\r\nimport cn from 'classnames';\r\nimport styles from './Button.module.css';\r\n\r\nexport type ButtonProps = React.ButtonHTMLAttributes<HTMLButtonElement>;\r\n\r\nconst Button: React.FC<ButtonProps> = memo(({ children, className, ...otherProps }) => {\r\n    return (\r\n        <button className={cn(styles.Button, className)} {...otherProps}>\r\n            {children}\r\n        </button>\r\n    );\r\n});\r\n\r\nexport default Button;"],"names":["constructor","year","Date","getFullYear","makeAutoObservable","this","setNextYear","setPrevYear","getDaysInMonth","month","getDate","observer","calendarStore","calendar","setCalendar","useState","useCallback","useEffect","newCalendar","daysInMonth","days","day","push","_jsx","className","styles","children","_jsxs","toLocaleString","Button","onClick","memo","PageLayout","YearCalendar","_ref","otherProps","cn"],"sourceRoot":""}